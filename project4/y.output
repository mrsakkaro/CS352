Terminals unused in grammar

   WS
   EXCLAMATION


Grammar

    0 $accept: parse $end

    1 $@1: /* empty */

    2 parse: SCRIPTYPE $@1 lines end

    3 end: SLASHSCRIPT NEWLINE
    4    | SLASHSCRIPT

    5 lines: line lines
    6      | /* empty */

    7 line: VAR ID over

    8 $@2: /* empty */

    9 line: id EQUAL CUROPENBRAC $@2 object CURCLOSEBRAC over
   10     | id EQUAL CUROPENBRAC CURCLOSEBRAC over

   11 $@3: /* empty */

   12 line: id EQUAL OPENBRAC $@3 array over
   13     | id EQUAL exps over

   14 $@4: /* empty */

   15 line: DOCUWRITE $@4 OPENPARENT param CLOSEPARENT over
   16     | ifstmt
   17     | while
   18     | break
   19     | continue
   20     | funcDecl
   21     | funcCall over
   22     | RETURN exps over
   23     | RETURN over
   24     | NEWLINE

   25 $@5: /* empty */

   26 while: WHILE OPENPARENT cond CLOSEPARENT $@5 body

   27 $@6: /* empty */

   28 funcCall: ID OPENPARENT $@6 fcparam CLOSEPARENT

   29 fcparam: exps

   30 $@7: /* empty */

   31 fcparam: exps $@7 COMMA fcparam

   32 $@8: /* empty */

   33 $@9: /* empty */

   34 funcDecl: FUNCTION ID OPENPARENT $@8 funcparam CLOSEPARENT body $@9 NEWLINE

   35 funcparam: funcparam2
   36          | /* empty */

   37 funcparam2: ID

   38 $@10: /* empty */

   39 funcparam2: ID $@10 COMMA funcparam

   40 break: BREAK

   41 continue: CONTINUE

   42 $@11: /* empty */

   43 $@12: /* empty */

   44 ifstmt: IF OPENPARENT cond CLOSEPARENT $@11 body $@12 elsestmt

   45 elsestmt: ELSE body NEWLINE
   46         | ELSE ifstmt
   47         | NEWLINE

   48 cond: exps

   49 $@13: /* empty */

   50 body: CUROPENBRAC NEWLINE lines $@13 CURCLOSEBRAC

   51 id: ID DOT ID
   52   | ID OPENBRAC exps CLOSEBRAC
   53   | ID
   54   | VAR ID

   55 over: SEMICOLON
   56     | NEWLINE

   57 param: exps

   58 $@14: /* empty */

   59 param: exps $@14 COMMA param
   60      | /* empty */

   61 exp4: exp4 TIME exp5
   62     | exp4 DIVIDE exp5
   63     | exp5
   64     | QQUO

   65 exp5: OPENPARENT exps CLOSEPARENT
   66     | NUM
   67     | id
   68     | funcCall

   69 exp3: exp3 PLUS exp4
   70     | exp3 MINUS exp4
   71     | exp4

   72 exp2: exp2 GREAT exp3
   73     | exp2 GREATEQUAL exp3
   74     | exp2 LESS exp3
   75     | exp2 LESSEQUAL exp3
   76     | exp3

   77 exp1: exp1 EQEQUAL exp2
   78     | exp1 NOTEQUAL exp2
   79     | exp2

   80 exp0: exp0 ANDAND exp1
   81     | exp1

   82 exps: exps OROR exp0
   83     | exp0

   84 object1: ID COLON exps

   85 object: object1
   86       | object1 NEWLINE
   87       | NEWLINE object1
   88       | NEWLINE object1 NEWLINE
   89       | object COMMA object1
   90       | object COMMA NEWLINE object1
   91       | object COMMA NEWLINE object1 NEWLINE

   92 arrayE: exps

   93 array: arrayL NEWLINE CLOSEBRAC
   94      | NEWLINE arrayL NEWLINE CLOSEBRAC
   95      | NEWLINE arrayL CLOSEBRAC
   96      | arrayL CLOSEBRAC
   97      | NEWLINE CLOSEBRAC
   98      | CLOSEBRAC

   99 arrayL: arrayE
  100       | arrayL COMMA NEWLINE arrayE
  101       | arrayL COMMA arrayE


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 7 28 34 37 39 51 52 53 54 84
QQUO (259) 64
NUM (260) 66
SCRIPTYPE (261) 2
SLASHSCRIPT (262) 3 4
NEWLINE (263) 3 24 34 45 47 50 56 86 87 88 90 91 93 94 95 97 100
VAR (264) 7 54
EQUAL (265) 9 10 12 13
COLON (266) 84
SEMICOLON (267) 55
DOCUWRITE (268) 15
OPENPARENT (269) 15 26 28 34 44 65
CLOSEPARENT (270) 15 26 28 34 44 65
COMMA (271) 31 39 59 89 90 91 100 101
WS (272)
DOT (273) 51
CUROPENBRAC (274) 9 10 50
CURCLOSEBRAC (275) 9 10 50
PLUS (276) 69
MINUS (277) 70
TIME (278) 61
DIVIDE (279) 62
IF (280) 44
ELSE (281) 45 46
LESS (282) 74
GREAT (283) 72
LESSEQUAL (284) 75
GREATEQUAL (285) 73
EQEQUAL (286) 77
NOTEQUAL (287) 78
ANDAND (288) 80
OROR (289) 82
EXCLAMATION (290)
OPENBRAC (291) 12 52
CLOSEBRAC (292) 52 93 94 95 96 97 98
WHILE (293) 26
BREAK (294) 40
CONTINUE (295) 41
FUNCTION (296) 34
RETURN (297) 22 23


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
parse (44)
    on left: 2, on right: 0
$@1 (45)
    on left: 1, on right: 2
end (46)
    on left: 3 4, on right: 2
lines (47)
    on left: 5 6, on right: 2 5 50
line (48)
    on left: 7 9 10 12 13 15 16 17 18 19 20 21 22 23 24, on right:
    5
$@2 (49)
    on left: 8, on right: 9
$@3 (50)
    on left: 11, on right: 12
$@4 (51)
    on left: 14, on right: 15
while (52)
    on left: 26, on right: 17
$@5 (53)
    on left: 25, on right: 26
funcCall (54)
    on left: 28, on right: 21 68
$@6 (55)
    on left: 27, on right: 28
fcparam (56)
    on left: 29 31, on right: 28 31
$@7 (57)
    on left: 30, on right: 31
funcDecl (58)
    on left: 34, on right: 20
$@8 (59)
    on left: 32, on right: 34
$@9 (60)
    on left: 33, on right: 34
funcparam (61)
    on left: 35 36, on right: 34 39
funcparam2 (62)
    on left: 37 39, on right: 35
$@10 (63)
    on left: 38, on right: 39
break (64)
    on left: 40, on right: 18
continue (65)
    on left: 41, on right: 19
ifstmt (66)
    on left: 44, on right: 16 46
$@11 (67)
    on left: 42, on right: 44
$@12 (68)
    on left: 43, on right: 44
elsestmt (69)
    on left: 45 46 47, on right: 44
cond (70)
    on left: 48, on right: 26 44
body (71)
    on left: 50, on right: 26 34 44 45
$@13 (72)
    on left: 49, on right: 50
id (73)
    on left: 51 52 53 54, on right: 9 10 12 13 67
over (74)
    on left: 55 56, on right: 7 9 10 12 13 15 21 22 23
param (75)
    on left: 57 59 60, on right: 15 59
$@14 (76)
    on left: 58, on right: 59
exp4 (77)
    on left: 61 62 63 64, on right: 61 62 69 70 71
exp5 (78)
    on left: 65 66 67 68, on right: 61 62 63
exp3 (79)
    on left: 69 70 71, on right: 69 70 72 73 74 75 76
exp2 (80)
    on left: 72 73 74 75 76, on right: 72 73 74 75 77 78 79
exp1 (81)
    on left: 77 78 79, on right: 77 78 80 81
exp0 (82)
    on left: 80 81, on right: 80 82 83
exps (83)
    on left: 82 83, on right: 13 22 29 31 48 52 57 59 65 82 84 92
object1 (84)
    on left: 84, on right: 85 86 87 88 89 90 91
object (85)
    on left: 85 86 87 88 89 90 91, on right: 9 89 90 91
arrayE (86)
    on left: 92, on right: 99 100 101
array (87)
    on left: 93 94 95 96 97 98, on right: 12
arrayL (88)
    on left: 99 100 101, on right: 93 94 95 96 100 101


state 0

    0 $accept: . parse $end

    SCRIPTYPE  shift, and go to state 1

    parse  go to state 2


state 1

    2 parse: SCRIPTYPE . $@1 lines end

    $default  reduce using rule 1 ($@1)

    $@1  go to state 3


state 2

    0 $accept: parse . $end

    $end  shift, and go to state 4


state 3

    2 parse: SCRIPTYPE $@1 . lines end

    ID         shift, and go to state 5
    NEWLINE    shift, and go to state 6
    VAR        shift, and go to state 7
    DOCUWRITE  shift, and go to state 8
    IF         shift, and go to state 9
    WHILE      shift, and go to state 10
    BREAK      shift, and go to state 11
    CONTINUE   shift, and go to state 12
    FUNCTION   shift, and go to state 13
    RETURN     shift, and go to state 14

    $default  reduce using rule 6 (lines)

    lines     go to state 15
    line      go to state 16
    while     go to state 17
    funcCall  go to state 18
    funcDecl  go to state 19
    break     go to state 20
    continue  go to state 21
    ifstmt    go to state 22
    id        go to state 23


state 4

    0 $accept: parse $end .

    $default  accept


state 5

   28 funcCall: ID . OPENPARENT $@6 fcparam CLOSEPARENT
   51 id: ID . DOT ID
   52   | ID . OPENBRAC exps CLOSEBRAC
   53   | ID .

    OPENPARENT  shift, and go to state 24
    DOT         shift, and go to state 25
    OPENBRAC    shift, and go to state 26

    $default  reduce using rule 53 (id)


state 6

   24 line: NEWLINE .

    $default  reduce using rule 24 (line)


state 7

    7 line: VAR . ID over
   54 id: VAR . ID

    ID  shift, and go to state 27


state 8

   15 line: DOCUWRITE . $@4 OPENPARENT param CLOSEPARENT over

    $default  reduce using rule 14 ($@4)

    $@4  go to state 28


state 9

   44 ifstmt: IF . OPENPARENT cond CLOSEPARENT $@11 body $@12 elsestmt

    OPENPARENT  shift, and go to state 29


state 10

   26 while: WHILE . OPENPARENT cond CLOSEPARENT $@5 body

    OPENPARENT  shift, and go to state 30


state 11

   40 break: BREAK .

    $default  reduce using rule 40 (break)


state 12

   41 continue: CONTINUE .

    $default  reduce using rule 41 (continue)


state 13

   34 funcDecl: FUNCTION . ID OPENPARENT $@8 funcparam CLOSEPARENT body $@9 NEWLINE

    ID  shift, and go to state 31


state 14

   22 line: RETURN . exps over
   23     | RETURN . over

    ID          shift, and go to state 5
    QQUO        shift, and go to state 32
    NUM         shift, and go to state 33
    NEWLINE     shift, and go to state 34
    VAR         shift, and go to state 35
    SEMICOLON   shift, and go to state 36
    OPENPARENT  shift, and go to state 37

    funcCall  go to state 38
    id        go to state 39
    over      go to state 40
    exp4      go to state 41
    exp5      go to state 42
    exp3      go to state 43
    exp2      go to state 44
    exp1      go to state 45
    exp0      go to state 46
    exps      go to state 47


state 15

    2 parse: SCRIPTYPE $@1 lines . end

    SLASHSCRIPT  shift, and go to state 48

    end  go to state 49


state 16

    5 lines: line . lines

    ID         shift, and go to state 5
    NEWLINE    shift, and go to state 6
    VAR        shift, and go to state 7
    DOCUWRITE  shift, and go to state 8
    IF         shift, and go to state 9
    WHILE      shift, and go to state 10
    BREAK      shift, and go to state 11
    CONTINUE   shift, and go to state 12
    FUNCTION   shift, and go to state 13
    RETURN     shift, and go to state 14

    $default  reduce using rule 6 (lines)

    lines     go to state 50
    line      go to state 16
    while     go to state 17
    funcCall  go to state 18
    funcDecl  go to state 19
    break     go to state 20
    continue  go to state 21
    ifstmt    go to state 22
    id        go to state 23


state 17

   17 line: while .

    $default  reduce using rule 17 (line)


state 18

   21 line: funcCall . over

    NEWLINE    shift, and go to state 34
    SEMICOLON  shift, and go to state 36

    over  go to state 51


state 19

   20 line: funcDecl .

    $default  reduce using rule 20 (line)


state 20

   18 line: break .

    $default  reduce using rule 18 (line)


state 21

   19 line: continue .

    $default  reduce using rule 19 (line)


state 22

   16 line: ifstmt .

    $default  reduce using rule 16 (line)


state 23

    9 line: id . EQUAL CUROPENBRAC $@2 object CURCLOSEBRAC over
   10     | id . EQUAL CUROPENBRAC CURCLOSEBRAC over
   12     | id . EQUAL OPENBRAC $@3 array over
   13     | id . EQUAL exps over

    EQUAL  shift, and go to state 52


state 24

   28 funcCall: ID OPENPARENT . $@6 fcparam CLOSEPARENT

    $default  reduce using rule 27 ($@6)

    $@6  go to state 53


state 25

   51 id: ID DOT . ID

    ID  shift, and go to state 54


state 26

   52 id: ID OPENBRAC . exps CLOSEBRAC

    ID          shift, and go to state 5
    QQUO        shift, and go to state 32
    NUM         shift, and go to state 33
    VAR         shift, and go to state 35
    OPENPARENT  shift, and go to state 37

    funcCall  go to state 38
    id        go to state 39
    exp4      go to state 41
    exp5      go to state 42
    exp3      go to state 43
    exp2      go to state 44
    exp1      go to state 45
    exp0      go to state 46
    exps      go to state 55


state 27

    7 line: VAR ID . over
   54 id: VAR ID .

    NEWLINE    shift, and go to state 34
    SEMICOLON  shift, and go to state 36

    $default  reduce using rule 54 (id)

    over  go to state 56


state 28

   15 line: DOCUWRITE $@4 . OPENPARENT param CLOSEPARENT over

    OPENPARENT  shift, and go to state 57


state 29

   44 ifstmt: IF OPENPARENT . cond CLOSEPARENT $@11 body $@12 elsestmt

    ID          shift, and go to state 5
    QQUO        shift, and go to state 32
    NUM         shift, and go to state 33
    VAR         shift, and go to state 35
    OPENPARENT  shift, and go to state 37

    funcCall  go to state 38
    cond      go to state 58
    id        go to state 39
    exp4      go to state 41
    exp5      go to state 42
    exp3      go to state 43
    exp2      go to state 44
    exp1      go to state 45
    exp0      go to state 46
    exps      go to state 59


state 30

   26 while: WHILE OPENPARENT . cond CLOSEPARENT $@5 body

    ID          shift, and go to state 5
    QQUO        shift, and go to state 32
    NUM         shift, and go to state 33
    VAR         shift, and go to state 35
    OPENPARENT  shift, and go to state 37

    funcCall  go to state 38
    cond      go to state 60
    id        go to state 39
    exp4      go to state 41
    exp5      go to state 42
    exp3      go to state 43
    exp2      go to state 44
    exp1      go to state 45
    exp0      go to state 46
    exps      go to state 59


state 31

   34 funcDecl: FUNCTION ID . OPENPARENT $@8 funcparam CLOSEPARENT body $@9 NEWLINE

    OPENPARENT  shift, and go to state 61


state 32

   64 exp4: QQUO .

    $default  reduce using rule 64 (exp4)


state 33

   66 exp5: NUM .

    $default  reduce using rule 66 (exp5)


state 34

   56 over: NEWLINE .

    $default  reduce using rule 56 (over)


state 35

   54 id: VAR . ID

    ID  shift, and go to state 62


state 36

   55 over: SEMICOLON .

    $default  reduce using rule 55 (over)


state 37

   65 exp5: OPENPARENT . exps CLOSEPARENT

    ID          shift, and go to state 5
    QQUO        shift, and go to state 32
    NUM         shift, and go to state 33
    VAR         shift, and go to state 35
    OPENPARENT  shift, and go to state 37

    funcCall  go to state 38
    id        go to state 39
    exp4      go to state 41
    exp5      go to state 42
    exp3      go to state 43
    exp2      go to state 44
    exp1      go to state 45
    exp0      go to state 46
    exps      go to state 63


state 38

   68 exp5: funcCall .

    $default  reduce using rule 68 (exp5)


state 39

   67 exp5: id .

    $default  reduce using rule 67 (exp5)


state 40

   23 line: RETURN over .

    $default  reduce using rule 23 (line)


state 41

   61 exp4: exp4 . TIME exp5
   62     | exp4 . DIVIDE exp5
   71 exp3: exp4 .

    TIME    shift, and go to state 64
    DIVIDE  shift, and go to state 65

    $default  reduce using rule 71 (exp3)


state 42

   63 exp4: exp5 .

    $default  reduce using rule 63 (exp4)


state 43

   69 exp3: exp3 . PLUS exp4
   70     | exp3 . MINUS exp4
   76 exp2: exp3 .

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67

    $default  reduce using rule 76 (exp2)


state 44

   72 exp2: exp2 . GREAT exp3
   73     | exp2 . GREATEQUAL exp3
   74     | exp2 . LESS exp3
   75     | exp2 . LESSEQUAL exp3
   79 exp1: exp2 .

    LESS        shift, and go to state 68
    GREAT       shift, and go to state 69
    LESSEQUAL   shift, and go to state 70
    GREATEQUAL  shift, and go to state 71

    $default  reduce using rule 79 (exp1)


state 45

   77 exp1: exp1 . EQEQUAL exp2
   78     | exp1 . NOTEQUAL exp2
   81 exp0: exp1 .

    EQEQUAL   shift, and go to state 72
    NOTEQUAL  shift, and go to state 73

    $default  reduce using rule 81 (exp0)


state 46

   80 exp0: exp0 . ANDAND exp1
   83 exps: exp0 .

    ANDAND  shift, and go to state 74

    $default  reduce using rule 83 (exps)


state 47

   22 line: RETURN exps . over
   82 exps: exps . OROR exp0

    NEWLINE    shift, and go to state 34
    SEMICOLON  shift, and go to state 36
    OROR       shift, and go to state 75

    over  go to state 76


state 48

    3 end: SLASHSCRIPT . NEWLINE
    4    | SLASHSCRIPT .

    NEWLINE  shift, and go to state 77

    $default  reduce using rule 4 (end)


state 49

    2 parse: SCRIPTYPE $@1 lines end .

    $default  reduce using rule 2 (parse)


state 50

    5 lines: line lines .

    $default  reduce using rule 5 (lines)


state 51

   21 line: funcCall over .

    $default  reduce using rule 21 (line)


state 52

    9 line: id EQUAL . CUROPENBRAC $@2 object CURCLOSEBRAC over
   10     | id EQUAL . CUROPENBRAC CURCLOSEBRAC over
   12     | id EQUAL . OPENBRAC $@3 array over
   13     | id EQUAL . exps over

    ID           shift, and go to state 5
    QQUO         shift, and go to state 32
    NUM          shift, and go to state 33
    VAR          shift, and go to state 35
    OPENPARENT   shift, and go to state 37
    CUROPENBRAC  shift, and go to state 78
    OPENBRAC     shift, and go to state 79

    funcCall  go to state 38
    id        go to state 39
    exp4      go to state 41
    exp5      go to state 42
    exp3      go to state 43
    exp2      go to state 44
    exp1      go to state 45
    exp0      go to state 46
    exps      go to state 80


state 53

   28 funcCall: ID OPENPARENT $@6 . fcparam CLOSEPARENT

    ID          shift, and go to state 5
    QQUO        shift, and go to state 32
    NUM         shift, and go to state 33
    VAR         shift, and go to state 35
    OPENPARENT  shift, and go to state 37

    funcCall  go to state 38
    fcparam   go to state 81
    id        go to state 39
    exp4      go to state 41
    exp5      go to state 42
    exp3      go to state 43
    exp2      go to state 44
    exp1      go to state 45
    exp0      go to state 46
    exps      go to state 82


state 54

   51 id: ID DOT ID .

    $default  reduce using rule 51 (id)


state 55

   52 id: ID OPENBRAC exps . CLOSEBRAC
   82 exps: exps . OROR exp0

    OROR       shift, and go to state 75
    CLOSEBRAC  shift, and go to state 83


state 56

    7 line: VAR ID over .

    $default  reduce using rule 7 (line)


state 57

   15 line: DOCUWRITE $@4 OPENPARENT . param CLOSEPARENT over

    ID          shift, and go to state 5
    QQUO        shift, and go to state 32
    NUM         shift, and go to state 33
    VAR         shift, and go to state 35
    OPENPARENT  shift, and go to state 37

    $default  reduce using rule 60 (param)

    funcCall  go to state 38
    id        go to state 39
    param     go to state 84
    exp4      go to state 41
    exp5      go to state 42
    exp3      go to state 43
    exp2      go to state 44
    exp1      go to state 45
    exp0      go to state 46
    exps      go to state 85


state 58

   44 ifstmt: IF OPENPARENT cond . CLOSEPARENT $@11 body $@12 elsestmt

    CLOSEPARENT  shift, and go to state 86


state 59

   48 cond: exps .
   82 exps: exps . OROR exp0

    OROR  shift, and go to state 75

    $default  reduce using rule 48 (cond)


state 60

   26 while: WHILE OPENPARENT cond . CLOSEPARENT $@5 body

    CLOSEPARENT  shift, and go to state 87


state 61

   34 funcDecl: FUNCTION ID OPENPARENT . $@8 funcparam CLOSEPARENT body $@9 NEWLINE

    $default  reduce using rule 32 ($@8)

    $@8  go to state 88


state 62

   54 id: VAR ID .

    $default  reduce using rule 54 (id)


state 63

   65 exp5: OPENPARENT exps . CLOSEPARENT
   82 exps: exps . OROR exp0

    CLOSEPARENT  shift, and go to state 89
    OROR         shift, and go to state 75


state 64

   61 exp4: exp4 TIME . exp5

    ID          shift, and go to state 5
    NUM         shift, and go to state 33
    VAR         shift, and go to state 35
    OPENPARENT  shift, and go to state 37

    funcCall  go to state 38
    id        go to state 39
    exp5      go to state 90


state 65

   62 exp4: exp4 DIVIDE . exp5

    ID          shift, and go to state 5
    NUM         shift, and go to state 33
    VAR         shift, and go to state 35
    OPENPARENT  shift, and go to state 37

    funcCall  go to state 38
    id        go to state 39
    exp5      go to state 91


state 66

   69 exp3: exp3 PLUS . exp4

    ID          shift, and go to state 5
    QQUO        shift, and go to state 32
    NUM         shift, and go to state 33
    VAR         shift, and go to state 35
    OPENPARENT  shift, and go to state 37

    funcCall  go to state 38
    id        go to state 39
    exp4      go to state 92
    exp5      go to state 42


state 67

   70 exp3: exp3 MINUS . exp4

    ID          shift, and go to state 5
    QQUO        shift, and go to state 32
    NUM         shift, and go to state 33
    VAR         shift, and go to state 35
    OPENPARENT  shift, and go to state 37

    funcCall  go to state 38
    id        go to state 39
    exp4      go to state 93
    exp5      go to state 42


state 68

   74 exp2: exp2 LESS . exp3

    ID          shift, and go to state 5
    QQUO        shift, and go to state 32
    NUM         shift, and go to state 33
    VAR         shift, and go to state 35
    OPENPARENT  shift, and go to state 37

    funcCall  go to state 38
    id        go to state 39
    exp4      go to state 41
    exp5      go to state 42
    exp3      go to state 94


state 69

   72 exp2: exp2 GREAT . exp3

    ID          shift, and go to state 5
    QQUO        shift, and go to state 32
    NUM         shift, and go to state 33
    VAR         shift, and go to state 35
    OPENPARENT  shift, and go to state 37

    funcCall  go to state 38
    id        go to state 39
    exp4      go to state 41
    exp5      go to state 42
    exp3      go to state 95


state 70

   75 exp2: exp2 LESSEQUAL . exp3

    ID          shift, and go to state 5
    QQUO        shift, and go to state 32
    NUM         shift, and go to state 33
    VAR         shift, and go to state 35
    OPENPARENT  shift, and go to state 37

    funcCall  go to state 38
    id        go to state 39
    exp4      go to state 41
    exp5      go to state 42
    exp3      go to state 96


state 71

   73 exp2: exp2 GREATEQUAL . exp3

    ID          shift, and go to state 5
    QQUO        shift, and go to state 32
    NUM         shift, and go to state 33
    VAR         shift, and go to state 35
    OPENPARENT  shift, and go to state 37

    funcCall  go to state 38
    id        go to state 39
    exp4      go to state 41
    exp5      go to state 42
    exp3      go to state 97


state 72

   77 exp1: exp1 EQEQUAL . exp2

    ID          shift, and go to state 5
    QQUO        shift, and go to state 32
    NUM         shift, and go to state 33
    VAR         shift, and go to state 35
    OPENPARENT  shift, and go to state 37

    funcCall  go to state 38
    id        go to state 39
    exp4      go to state 41
    exp5      go to state 42
    exp3      go to state 43
    exp2      go to state 98


state 73

   78 exp1: exp1 NOTEQUAL . exp2

    ID          shift, and go to state 5
    QQUO        shift, and go to state 32
    NUM         shift, and go to state 33
    VAR         shift, and go to state 35
    OPENPARENT  shift, and go to state 37

    funcCall  go to state 38
    id        go to state 39
    exp4      go to state 41
    exp5      go to state 42
    exp3      go to state 43
    exp2      go to state 99


state 74

   80 exp0: exp0 ANDAND . exp1

    ID          shift, and go to state 5
    QQUO        shift, and go to state 32
    NUM         shift, and go to state 33
    VAR         shift, and go to state 35
    OPENPARENT  shift, and go to state 37

    funcCall  go to state 38
    id        go to state 39
    exp4      go to state 41
    exp5      go to state 42
    exp3      go to state 43
    exp2      go to state 44
    exp1      go to state 100


state 75

   82 exps: exps OROR . exp0

    ID          shift, and go to state 5
    QQUO        shift, and go to state 32
    NUM         shift, and go to state 33
    VAR         shift, and go to state 35
    OPENPARENT  shift, and go to state 37

    funcCall  go to state 38
    id        go to state 39
    exp4      go to state 41
    exp5      go to state 42
    exp3      go to state 43
    exp2      go to state 44
    exp1      go to state 45
    exp0      go to state 101


state 76

   22 line: RETURN exps over .

    $default  reduce using rule 22 (line)


state 77

    3 end: SLASHSCRIPT NEWLINE .

    $default  reduce using rule 3 (end)


state 78

    9 line: id EQUAL CUROPENBRAC . $@2 object CURCLOSEBRAC over
   10     | id EQUAL CUROPENBRAC . CURCLOSEBRAC over

    CURCLOSEBRAC  shift, and go to state 102

    $default  reduce using rule 8 ($@2)

    $@2  go to state 103


state 79

   12 line: id EQUAL OPENBRAC . $@3 array over

    $default  reduce using rule 11 ($@3)

    $@3  go to state 104


state 80

   13 line: id EQUAL exps . over
   82 exps: exps . OROR exp0

    NEWLINE    shift, and go to state 34
    SEMICOLON  shift, and go to state 36
    OROR       shift, and go to state 75

    over  go to state 105


state 81

   28 funcCall: ID OPENPARENT $@6 fcparam . CLOSEPARENT

    CLOSEPARENT  shift, and go to state 106


state 82

   29 fcparam: exps .
   31        | exps . $@7 COMMA fcparam
   82 exps: exps . OROR exp0

    OROR  shift, and go to state 75

    COMMA     reduce using rule 30 ($@7)
    $default  reduce using rule 29 (fcparam)

    $@7  go to state 107


state 83

   52 id: ID OPENBRAC exps CLOSEBRAC .

    $default  reduce using rule 52 (id)


state 84

   15 line: DOCUWRITE $@4 OPENPARENT param . CLOSEPARENT over

    CLOSEPARENT  shift, and go to state 108


state 85

   57 param: exps .
   59      | exps . $@14 COMMA param
   82 exps: exps . OROR exp0

    OROR  shift, and go to state 75

    COMMA     reduce using rule 58 ($@14)
    $default  reduce using rule 57 (param)

    $@14  go to state 109


state 86

   44 ifstmt: IF OPENPARENT cond CLOSEPARENT . $@11 body $@12 elsestmt

    $default  reduce using rule 42 ($@11)

    $@11  go to state 110


state 87

   26 while: WHILE OPENPARENT cond CLOSEPARENT . $@5 body

    $default  reduce using rule 25 ($@5)

    $@5  go to state 111


state 88

   34 funcDecl: FUNCTION ID OPENPARENT $@8 . funcparam CLOSEPARENT body $@9 NEWLINE

    ID  shift, and go to state 112

    $default  reduce using rule 36 (funcparam)

    funcparam   go to state 113
    funcparam2  go to state 114


state 89

   65 exp5: OPENPARENT exps CLOSEPARENT .

    $default  reduce using rule 65 (exp5)


state 90

   61 exp4: exp4 TIME exp5 .

    $default  reduce using rule 61 (exp4)


state 91

   62 exp4: exp4 DIVIDE exp5 .

    $default  reduce using rule 62 (exp4)


state 92

   61 exp4: exp4 . TIME exp5
   62     | exp4 . DIVIDE exp5
   69 exp3: exp3 PLUS exp4 .

    TIME    shift, and go to state 64
    DIVIDE  shift, and go to state 65

    $default  reduce using rule 69 (exp3)


state 93

   61 exp4: exp4 . TIME exp5
   62     | exp4 . DIVIDE exp5
   70 exp3: exp3 MINUS exp4 .

    TIME    shift, and go to state 64
    DIVIDE  shift, and go to state 65

    $default  reduce using rule 70 (exp3)


state 94

   69 exp3: exp3 . PLUS exp4
   70     | exp3 . MINUS exp4
   74 exp2: exp2 LESS exp3 .

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67

    $default  reduce using rule 74 (exp2)


state 95

   69 exp3: exp3 . PLUS exp4
   70     | exp3 . MINUS exp4
   72 exp2: exp2 GREAT exp3 .

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67

    $default  reduce using rule 72 (exp2)


state 96

   69 exp3: exp3 . PLUS exp4
   70     | exp3 . MINUS exp4
   75 exp2: exp2 LESSEQUAL exp3 .

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67

    $default  reduce using rule 75 (exp2)


state 97

   69 exp3: exp3 . PLUS exp4
   70     | exp3 . MINUS exp4
   73 exp2: exp2 GREATEQUAL exp3 .

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67

    $default  reduce using rule 73 (exp2)


state 98

   72 exp2: exp2 . GREAT exp3
   73     | exp2 . GREATEQUAL exp3
   74     | exp2 . LESS exp3
   75     | exp2 . LESSEQUAL exp3
   77 exp1: exp1 EQEQUAL exp2 .

    LESS        shift, and go to state 68
    GREAT       shift, and go to state 69
    LESSEQUAL   shift, and go to state 70
    GREATEQUAL  shift, and go to state 71

    $default  reduce using rule 77 (exp1)


state 99

   72 exp2: exp2 . GREAT exp3
   73     | exp2 . GREATEQUAL exp3
   74     | exp2 . LESS exp3
   75     | exp2 . LESSEQUAL exp3
   78 exp1: exp1 NOTEQUAL exp2 .

    LESS        shift, and go to state 68
    GREAT       shift, and go to state 69
    LESSEQUAL   shift, and go to state 70
    GREATEQUAL  shift, and go to state 71

    $default  reduce using rule 78 (exp1)


state 100

   77 exp1: exp1 . EQEQUAL exp2
   78     | exp1 . NOTEQUAL exp2
   80 exp0: exp0 ANDAND exp1 .

    EQEQUAL   shift, and go to state 72
    NOTEQUAL  shift, and go to state 73

    $default  reduce using rule 80 (exp0)


state 101

   80 exp0: exp0 . ANDAND exp1
   82 exps: exps OROR exp0 .

    ANDAND  shift, and go to state 74

    $default  reduce using rule 82 (exps)


state 102

   10 line: id EQUAL CUROPENBRAC CURCLOSEBRAC . over

    NEWLINE    shift, and go to state 34
    SEMICOLON  shift, and go to state 36

    over  go to state 115


state 103

    9 line: id EQUAL CUROPENBRAC $@2 . object CURCLOSEBRAC over

    ID       shift, and go to state 116
    NEWLINE  shift, and go to state 117

    object1  go to state 118
    object   go to state 119


state 104

   12 line: id EQUAL OPENBRAC $@3 . array over

    ID          shift, and go to state 5
    QQUO        shift, and go to state 32
    NUM         shift, and go to state 33
    NEWLINE     shift, and go to state 120
    VAR         shift, and go to state 35
    OPENPARENT  shift, and go to state 37
    CLOSEBRAC   shift, and go to state 121

    funcCall  go to state 38
    id        go to state 39
    exp4      go to state 41
    exp5      go to state 42
    exp3      go to state 43
    exp2      go to state 44
    exp1      go to state 45
    exp0      go to state 46
    exps      go to state 122
    arrayE    go to state 123
    array     go to state 124
    arrayL    go to state 125


state 105

   13 line: id EQUAL exps over .

    $default  reduce using rule 13 (line)


state 106

   28 funcCall: ID OPENPARENT $@6 fcparam CLOSEPARENT .

    $default  reduce using rule 28 (funcCall)


state 107

   31 fcparam: exps $@7 . COMMA fcparam

    COMMA  shift, and go to state 126


state 108

   15 line: DOCUWRITE $@4 OPENPARENT param CLOSEPARENT . over

    NEWLINE    shift, and go to state 34
    SEMICOLON  shift, and go to state 36

    over  go to state 127


state 109

   59 param: exps $@14 . COMMA param

    COMMA  shift, and go to state 128


state 110

   44 ifstmt: IF OPENPARENT cond CLOSEPARENT $@11 . body $@12 elsestmt

    CUROPENBRAC  shift, and go to state 129

    body  go to state 130


state 111

   26 while: WHILE OPENPARENT cond CLOSEPARENT $@5 . body

    CUROPENBRAC  shift, and go to state 129

    body  go to state 131


state 112

   37 funcparam2: ID .
   39           | ID . $@10 COMMA funcparam

    COMMA     reduce using rule 38 ($@10)
    $default  reduce using rule 37 (funcparam2)

    $@10  go to state 132


state 113

   34 funcDecl: FUNCTION ID OPENPARENT $@8 funcparam . CLOSEPARENT body $@9 NEWLINE

    CLOSEPARENT  shift, and go to state 133


state 114

   35 funcparam: funcparam2 .

    $default  reduce using rule 35 (funcparam)


state 115

   10 line: id EQUAL CUROPENBRAC CURCLOSEBRAC over .

    $default  reduce using rule 10 (line)


state 116

   84 object1: ID . COLON exps

    COLON  shift, and go to state 134


state 117

   87 object: NEWLINE . object1
   88       | NEWLINE . object1 NEWLINE

    ID  shift, and go to state 116

    object1  go to state 135


state 118

   85 object: object1 .
   86       | object1 . NEWLINE

    NEWLINE  shift, and go to state 136

    $default  reduce using rule 85 (object)


state 119

    9 line: id EQUAL CUROPENBRAC $@2 object . CURCLOSEBRAC over
   89 object: object . COMMA object1
   90       | object . COMMA NEWLINE object1
   91       | object . COMMA NEWLINE object1 NEWLINE

    COMMA         shift, and go to state 137
    CURCLOSEBRAC  shift, and go to state 138


state 120

   94 array: NEWLINE . arrayL NEWLINE CLOSEBRAC
   95      | NEWLINE . arrayL CLOSEBRAC
   97      | NEWLINE . CLOSEBRAC

    ID          shift, and go to state 5
    QQUO        shift, and go to state 32
    NUM         shift, and go to state 33
    VAR         shift, and go to state 35
    OPENPARENT  shift, and go to state 37
    CLOSEBRAC   shift, and go to state 139

    funcCall  go to state 38
    id        go to state 39
    exp4      go to state 41
    exp5      go to state 42
    exp3      go to state 43
    exp2      go to state 44
    exp1      go to state 45
    exp0      go to state 46
    exps      go to state 122
    arrayE    go to state 123
    arrayL    go to state 140


state 121

   98 array: CLOSEBRAC .

    $default  reduce using rule 98 (array)


state 122

   82 exps: exps . OROR exp0
   92 arrayE: exps .

    OROR  shift, and go to state 75

    $default  reduce using rule 92 (arrayE)


state 123

   99 arrayL: arrayE .

    $default  reduce using rule 99 (arrayL)


state 124

   12 line: id EQUAL OPENBRAC $@3 array . over

    NEWLINE    shift, and go to state 34
    SEMICOLON  shift, and go to state 36

    over  go to state 141


state 125

   93 array: arrayL . NEWLINE CLOSEBRAC
   96      | arrayL . CLOSEBRAC
  100 arrayL: arrayL . COMMA NEWLINE arrayE
  101       | arrayL . COMMA arrayE

    NEWLINE    shift, and go to state 142
    COMMA      shift, and go to state 143
    CLOSEBRAC  shift, and go to state 144


state 126

   31 fcparam: exps $@7 COMMA . fcparam

    ID          shift, and go to state 5
    QQUO        shift, and go to state 32
    NUM         shift, and go to state 33
    VAR         shift, and go to state 35
    OPENPARENT  shift, and go to state 37

    funcCall  go to state 38
    fcparam   go to state 145
    id        go to state 39
    exp4      go to state 41
    exp5      go to state 42
    exp3      go to state 43
    exp2      go to state 44
    exp1      go to state 45
    exp0      go to state 46
    exps      go to state 82


state 127

   15 line: DOCUWRITE $@4 OPENPARENT param CLOSEPARENT over .

    $default  reduce using rule 15 (line)


state 128

   59 param: exps $@14 COMMA . param

    ID          shift, and go to state 5
    QQUO        shift, and go to state 32
    NUM         shift, and go to state 33
    VAR         shift, and go to state 35
    OPENPARENT  shift, and go to state 37

    $default  reduce using rule 60 (param)

    funcCall  go to state 38
    id        go to state 39
    param     go to state 146
    exp4      go to state 41
    exp5      go to state 42
    exp3      go to state 43
    exp2      go to state 44
    exp1      go to state 45
    exp0      go to state 46
    exps      go to state 85


state 129

   50 body: CUROPENBRAC . NEWLINE lines $@13 CURCLOSEBRAC

    NEWLINE  shift, and go to state 147


state 130

   44 ifstmt: IF OPENPARENT cond CLOSEPARENT $@11 body . $@12 elsestmt

    $default  reduce using rule 43 ($@12)

    $@12  go to state 148


state 131

   26 while: WHILE OPENPARENT cond CLOSEPARENT $@5 body .

    $default  reduce using rule 26 (while)


state 132

   39 funcparam2: ID $@10 . COMMA funcparam

    COMMA  shift, and go to state 149


state 133

   34 funcDecl: FUNCTION ID OPENPARENT $@8 funcparam CLOSEPARENT . body $@9 NEWLINE

    CUROPENBRAC  shift, and go to state 129

    body  go to state 150


state 134

   84 object1: ID COLON . exps

    ID          shift, and go to state 5
    QQUO        shift, and go to state 32
    NUM         shift, and go to state 33
    VAR         shift, and go to state 35
    OPENPARENT  shift, and go to state 37

    funcCall  go to state 38
    id        go to state 39
    exp4      go to state 41
    exp5      go to state 42
    exp3      go to state 43
    exp2      go to state 44
    exp1      go to state 45
    exp0      go to state 46
    exps      go to state 151


state 135

   87 object: NEWLINE object1 .
   88       | NEWLINE object1 . NEWLINE

    NEWLINE  shift, and go to state 152

    $default  reduce using rule 87 (object)


state 136

   86 object: object1 NEWLINE .

    $default  reduce using rule 86 (object)


state 137

   89 object: object COMMA . object1
   90       | object COMMA . NEWLINE object1
   91       | object COMMA . NEWLINE object1 NEWLINE

    ID       shift, and go to state 116
    NEWLINE  shift, and go to state 153

    object1  go to state 154


state 138

    9 line: id EQUAL CUROPENBRAC $@2 object CURCLOSEBRAC . over

    NEWLINE    shift, and go to state 34
    SEMICOLON  shift, and go to state 36

    over  go to state 155


state 139

   97 array: NEWLINE CLOSEBRAC .

    $default  reduce using rule 97 (array)


state 140

   94 array: NEWLINE arrayL . NEWLINE CLOSEBRAC
   95      | NEWLINE arrayL . CLOSEBRAC
  100 arrayL: arrayL . COMMA NEWLINE arrayE
  101       | arrayL . COMMA arrayE

    NEWLINE    shift, and go to state 156
    COMMA      shift, and go to state 143
    CLOSEBRAC  shift, and go to state 157


state 141

   12 line: id EQUAL OPENBRAC $@3 array over .

    $default  reduce using rule 12 (line)


state 142

   93 array: arrayL NEWLINE . CLOSEBRAC

    CLOSEBRAC  shift, and go to state 158


state 143

  100 arrayL: arrayL COMMA . NEWLINE arrayE
  101       | arrayL COMMA . arrayE

    ID          shift, and go to state 5
    QQUO        shift, and go to state 32
    NUM         shift, and go to state 33
    NEWLINE     shift, and go to state 159
    VAR         shift, and go to state 35
    OPENPARENT  shift, and go to state 37

    funcCall  go to state 38
    id        go to state 39
    exp4      go to state 41
    exp5      go to state 42
    exp3      go to state 43
    exp2      go to state 44
    exp1      go to state 45
    exp0      go to state 46
    exps      go to state 122
    arrayE    go to state 160


state 144

   96 array: arrayL CLOSEBRAC .

    $default  reduce using rule 96 (array)


state 145

   31 fcparam: exps $@7 COMMA fcparam .

    $default  reduce using rule 31 (fcparam)


state 146

   59 param: exps $@14 COMMA param .

    $default  reduce using rule 59 (param)


state 147

   50 body: CUROPENBRAC NEWLINE . lines $@13 CURCLOSEBRAC

    ID         shift, and go to state 5
    NEWLINE    shift, and go to state 6
    VAR        shift, and go to state 7
    DOCUWRITE  shift, and go to state 8
    IF         shift, and go to state 9
    WHILE      shift, and go to state 10
    BREAK      shift, and go to state 11
    CONTINUE   shift, and go to state 12
    FUNCTION   shift, and go to state 13
    RETURN     shift, and go to state 14

    $default  reduce using rule 6 (lines)

    lines     go to state 161
    line      go to state 16
    while     go to state 17
    funcCall  go to state 18
    funcDecl  go to state 19
    break     go to state 20
    continue  go to state 21
    ifstmt    go to state 22
    id        go to state 23


state 148

   44 ifstmt: IF OPENPARENT cond CLOSEPARENT $@11 body $@12 . elsestmt

    NEWLINE  shift, and go to state 162
    ELSE     shift, and go to state 163

    elsestmt  go to state 164


state 149

   39 funcparam2: ID $@10 COMMA . funcparam

    ID  shift, and go to state 112

    $default  reduce using rule 36 (funcparam)

    funcparam   go to state 165
    funcparam2  go to state 114


state 150

   34 funcDecl: FUNCTION ID OPENPARENT $@8 funcparam CLOSEPARENT body . $@9 NEWLINE

    $default  reduce using rule 33 ($@9)

    $@9  go to state 166


state 151

   82 exps: exps . OROR exp0
   84 object1: ID COLON exps .

    OROR  shift, and go to state 75

    $default  reduce using rule 84 (object1)


state 152

   88 object: NEWLINE object1 NEWLINE .

    $default  reduce using rule 88 (object)


state 153

   90 object: object COMMA NEWLINE . object1
   91       | object COMMA NEWLINE . object1 NEWLINE

    ID  shift, and go to state 116

    object1  go to state 167


state 154

   89 object: object COMMA object1 .

    $default  reduce using rule 89 (object)


state 155

    9 line: id EQUAL CUROPENBRAC $@2 object CURCLOSEBRAC over .

    $default  reduce using rule 9 (line)


state 156

   94 array: NEWLINE arrayL NEWLINE . CLOSEBRAC

    CLOSEBRAC  shift, and go to state 168


state 157

   95 array: NEWLINE arrayL CLOSEBRAC .

    $default  reduce using rule 95 (array)


state 158

   93 array: arrayL NEWLINE CLOSEBRAC .

    $default  reduce using rule 93 (array)


state 159

  100 arrayL: arrayL COMMA NEWLINE . arrayE

    ID          shift, and go to state 5
    QQUO        shift, and go to state 32
    NUM         shift, and go to state 33
    VAR         shift, and go to state 35
    OPENPARENT  shift, and go to state 37

    funcCall  go to state 38
    id        go to state 39
    exp4      go to state 41
    exp5      go to state 42
    exp3      go to state 43
    exp2      go to state 44
    exp1      go to state 45
    exp0      go to state 46
    exps      go to state 122
    arrayE    go to state 169


state 160

  101 arrayL: arrayL COMMA arrayE .

    $default  reduce using rule 101 (arrayL)


state 161

   50 body: CUROPENBRAC NEWLINE lines . $@13 CURCLOSEBRAC

    $default  reduce using rule 49 ($@13)

    $@13  go to state 170


state 162

   47 elsestmt: NEWLINE .

    $default  reduce using rule 47 (elsestmt)


state 163

   45 elsestmt: ELSE . body NEWLINE
   46         | ELSE . ifstmt

    CUROPENBRAC  shift, and go to state 129
    IF           shift, and go to state 9

    ifstmt  go to state 171
    body    go to state 172


state 164

   44 ifstmt: IF OPENPARENT cond CLOSEPARENT $@11 body $@12 elsestmt .

    $default  reduce using rule 44 (ifstmt)


state 165

   39 funcparam2: ID $@10 COMMA funcparam .

    $default  reduce using rule 39 (funcparam2)


state 166

   34 funcDecl: FUNCTION ID OPENPARENT $@8 funcparam CLOSEPARENT body $@9 . NEWLINE

    NEWLINE  shift, and go to state 173


state 167

   90 object: object COMMA NEWLINE object1 .
   91       | object COMMA NEWLINE object1 . NEWLINE

    NEWLINE  shift, and go to state 174

    $default  reduce using rule 90 (object)


state 168

   94 array: NEWLINE arrayL NEWLINE CLOSEBRAC .

    $default  reduce using rule 94 (array)


state 169

  100 arrayL: arrayL COMMA NEWLINE arrayE .

    $default  reduce using rule 100 (arrayL)


state 170

   50 body: CUROPENBRAC NEWLINE lines $@13 . CURCLOSEBRAC

    CURCLOSEBRAC  shift, and go to state 175


state 171

   46 elsestmt: ELSE ifstmt .

    $default  reduce using rule 46 (elsestmt)


state 172

   45 elsestmt: ELSE body . NEWLINE

    NEWLINE  shift, and go to state 176


state 173

   34 funcDecl: FUNCTION ID OPENPARENT $@8 funcparam CLOSEPARENT body $@9 NEWLINE .

    $default  reduce using rule 34 (funcDecl)


state 174

   91 object: object COMMA NEWLINE object1 NEWLINE .

    $default  reduce using rule 91 (object)


state 175

   50 body: CUROPENBRAC NEWLINE lines $@13 CURCLOSEBRAC .

    $default  reduce using rule 50 (body)


state 176

   45 elsestmt: ELSE body NEWLINE .

    $default  reduce using rule 45 (elsestmt)
